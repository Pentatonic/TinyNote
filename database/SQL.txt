- Create table
	CREATE TABLE orders (
		id INTEGER PRIMARY KEY,
		customer_id INTEGER,
		salesperson_id INTEGER,
		FOREIGN KEY(customer_id) REFERENCES customers(id),
		FOREIGN KEY(salesperson_id) REFERENCES salespeople(id)
	);
- Delete Entry
	DELETE FROM InvitationKeyPool WHERE Key >= '111'
- Insert Entry
	INSERT INTO InvitationKeyPool ('Key', 'Date') VALUES ('123', '20110808')
	
	// Avoid dupliacte entry inserted, EventTypName should be unique
	INSERT OR IGNORE INTO EVENTTYPE (EventTypeName) VALUES 'ANI Received'
	
	- INSERT INTO EVENTTYPE (EventTypeName)
	  SELECT 'ANI Received'
	  WHERE NOT EXISTS (SELECT 1 FROM EVENTTYPE WHERE EventTypeName = 'ANI Received');
	
- Get result row count, where key equals to "sunny day"
	SELECT COUNT(*) FROM InvitationKeyPool WHERE Key = "sunny day"

- Add a "clolumn" to table "UserData"
	ALTER TABLE UserData ADD PlayerSN VARCHAR
- Default to 'QQ'
	ALTER TABLE UserData ADD PlayerSN2 VARCHAR DEFAULT 'QQ' NOT NULL

- Delete column
	BEGIN TRANSACTION;
	CREATE TEMPORARY TABLE t1_backup(a,b);
	INSERT INTO t1_backup SELECT a,b FROM t1;
	DROP TABLE t1;
	CREATE TABLE t1(a,b);
	INSERT INTO t1 SELECT a,b FROM t1_backup;
	DROP TABLE t1_backup;
	COMMIT;

- select rows with some column equals to null
	SELECT COUNT(*) FROM UserData WHERE PlaySN is null OR PlaySN = ''
- Select null columns:
    where some_column is null or some_column = ''
    or
    where ifnull(some_column, '') = ''
    or
    where coalesce(some_column, '') = ''
    or
    where ifnull(length(some_column), 0) = 0

- show table column names
	PRAGMA table_info(table_name);

	